0	java/io/DataOutputStream/writeLong(long)
1	java/lang/Float/valueOf(float)
2	org/apache/parquet/column/page/DataPageV2/getNullCount()
3	org/apache/parquet/hadoop/ColumnChunkPageReadStore$ColumnChunkPageReader$1/visit(org.apache.parquet.column.page.DataPageV2)
4	org/apache/parquet/bytes/BytesInput/size()
5	org/apache/parquet/column/Dictionary/decodeToInt(int)
6	org/apache/parquet/format/Type/values()
7	java/io/DataOutputStream/close()
8	java/lang/Double/valueOf(double)
9	org/apache/parquet/schema/PrimitiveType$PrimitiveTypeName/values()
10	java/lang/Long/valueOf(long)
11	org/apache/parquet/column/page/DataPageV2/getRowCount()
12	org/apache/parquet/column/Encoding/initDictionary(org.apache.parquet.column.ColumnDescriptor,org.apache.parquet.column.page.DictionaryPage)
13	java/util/HashSet/HashSet()
14	java/io/ByteArrayOutputStream/toByteArray()
15	org/apache/parquet/schema/PrimitiveType$PrimitiveTypeName/ordinal()
16	org/apache/parquet/column/page/DataPageV2/uncompressed(int,int,int,org.apache.parquet.bytes.BytesInput,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.Encoding,org.apache.parquet.bytes.BytesInput,org.apache.parquet.column.statistics.Statistics)
17	org/apache/parquet/column/Dictionary/decodeToDouble(int)
18	org/apache/parquet/column/ColumnDescriptor/ColumnDescriptor(java.lang.String[],org.apache.parquet.schema.PrimitiveType$PrimitiveTypeName,int,int)
19	org/apache/parquet/schema/OriginalType/ordinal()
20	org/apache/parquet/column/page/DataPageV2/getStatistics()
21	org/apache/parquet/hadoop/CodecFactory$BytesDecompressor/decompress(org.apache.parquet.bytes.BytesInput,int)
22	org/apache/parquet/column/Dictionary/decodeToLong(int)
23	org/apache/parquet/column/Dictionary/decodeToFloat(int)
24	org/apache/parquet/column/page/DictionaryPage/getEncoding()
25	org/apache/parquet/format/Type/ordinal()
26	org/apache/parquet/column/page/DictionaryPageReadStore/readDictionaryPage(org.apache.parquet.column.ColumnDescriptor)
27	org/apache/parquet/column/page/DataPageV2/getRepetitionLevels()
28	org/apache/parquet/format/ConvertedType/values()
29	org/apache/parquet/Ints/checkedCast(long)
30	org/apache/parquet/schema/OriginalType/values()
31	java/io/ByteArrayOutputStream/ByteArrayOutputStream()
32	org/apache/parquet/column/page/DataPageV2/isCompressed()
33	org/apache/parquet/format/PageType/values()
34	java/io/DataOutputStream/writeInt(int)
35	org/apache/parquet/format/PageType/ordinal()
36	org/apache/parquet/column/page/DataPageV2/getData()
37	org/apache/parquet/column/page/DataPageV2/getDefinitionLevels()
38	org/apache/parquet/column/Dictionary/decodeToBinary(int)
39	org/apache/parquet/column/page/DataPageV2/getUncompressedSize()
40	org/apache/parquet/format/ConvertedType/ordinal()
41	org/apache/hadoop/mapreduce/lib/input/FileSplit/write(java.io.DataOutput)
42	java/io/DataOutputStream/writeBoolean(boolean)
43	java/util/zip/GZIPOutputStream/GZIPOutputStream(java.io.OutputStream)
44	org/slf4j/Logger/warn(java.lang.String,java.lang.Object)
45	java/util/Set/add(java.lang.Object)
46	org/apache/parquet/column/page/DataPageV2/getDataEncoding()
47	org/apache/parquet/hadoop/ColumnChunkPageReadStore$ColumnChunkPageReader/access$000(org.apache.parquet.hadoop.ColumnChunkPageReadStore$ColumnChunkPageReader)
48	org/apache/parquet/hadoop/metadata/ColumnPath/toArray()
49	org/apache/parquet/column/page/DataPageV2/getValueCount()
50	org/apache/parquet/io/ParquetDecodingException/ParquetDecodingException(java.lang.String,java.lang.Throwable)
51	java/io/DataOutputStream/DataOutputStream(java.io.OutputStream)
52	org/apache/parquet/column/Dictionary/getMaxId()
53	java/lang/Integer/valueOf(int)
