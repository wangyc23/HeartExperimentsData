0	java/nio/charset/CharsetDecoder/onUnmappableCharacter(java.nio.charset.CodingErrorAction)
1	org/apache/http/ConnectionReuseStrategy/keepAlive(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)
2	java/nio/ByteBuffer/hasRemaining()
3	java/nio/channels/SocketChannel/configureBlocking(boolean)
4	org/apache/http/util/CharArrayBuffer/append(char[],int,int)
5	java/nio/CharBuffer/put(char[],int,int)
6	java/nio/channels/SocketChannel/open()
7	java/nio/ByteBuffer/limit()
8	java/nio/CharBuffer/clear()
9	org/apache/http/MessageConstraintException/MessageConstraintException(java.lang.String)
10	java/nio/ByteBuffer/position(int)
11	org/apache/http/nio/protocol/HttpAsyncResponseProducer/close()
12	java/nio/ByteBuffer/limit(int)
13	org/apache/http/impl/nio/reactor/DefaultConnectingIOReactor/addChannel(org.apache.http.impl.nio.reactor.ChannelEntry)
14	java/nio/ByteBuffer/array()
15	org/apache/http/util/CharArrayBuffer/length()
16	java/nio/CharBuffer/position()
17	java/nio/charset/CharsetDecoder/reset()
18	org/apache/http/impl/nio/reactor/SessionOutputBufferImpl/ensureCapacity(int)
19	java/nio/charset/CharsetEncoder/reset()
20	java/nio/ByteBuffer/get()
21	java/nio/channels/SocketChannel/connect(java.net.SocketAddress)
22	org/apache/http/impl/nio/reactor/SessionOutputBufferImpl/expand()
23	java/nio/charset/CoderResult/isOverflow()
24	org/apache/http/util/CharArrayBuffer/append(char)
25	java/nio/charset/CharsetEncoder/encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)
26	java/nio/ByteBuffer/put(byte)
27	org/apache/http/nio/protocol/HttpAsyncService$Outgoing/getContext()
28	java/nio/CharBuffer/array()
29	java/nio/charset/CharsetDecoder/decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)
30	org/apache/http/nio/NHttpServerConnection/close()
31	java/nio/ByteBuffer/position()
32	org/apache/http/util/CharArrayBuffer/buffer()
33	java/nio/charset/CharsetDecoder/flush(java.nio.CharBuffer)
34	java/nio/charset/CoderResult/isUnderflow()
35	org/apache/http/impl/nio/reactor/DefaultConnectingIOReactor/prepareSocket(java.net.Socket)
36	org/apache/http/nio/protocol/HttpAsyncService$Outgoing/getResponse()
37	org/apache/http/impl/nio/reactor/SessionOutputBufferImpl/setInputMode()
38	org/apache/http/nio/protocol/HttpAsyncService$Outgoing/getProducer()
39	java/util/Queue/poll()
40	java/nio/channels/SocketChannel/socket()
41	java/nio/charset/Charset/newDecoder()
42	org/apache/http/nio/protocol/HttpAsyncService$State/setResponseState(org.apache.http.nio.protocol.MessageState)
43	java/net/Socket/bind(java.net.SocketAddress)
44	java/nio/charset/CoderResult/isError()
45	org/apache/http/util/CharArrayBuffer/append(byte[],int,int)
46	org/apache/http/nio/protocol/HttpAsyncService$State/setCancellable(org.apache.http.concurrent.Cancellable)
47	java/net/Socket/setReuseAddress(boolean)
48	java/nio/CharBuffer/allocate(int)
49	java/nio/ByteBuffer/remaining()
50	org/apache/http/nio/NHttpServerConnection/requestInput()
51	org/apache/http/impl/nio/reactor/DefaultConnectingIOReactor/closeChannel(java.nio.channels.Channel)
52	org/apache/http/util/CharArrayBuffer/charAt(int)
53	org/apache/http/config/MessageConstraints/getMaxLineLength()
54	org/apache/http/nio/protocol/HttpAsyncService$State/setOutgoing(org.apache.http.nio.protocol.HttpAsyncService$Outgoing)
55	java/nio/charset/CoderResult/throwException()
56	org/apache/http/util/CharArrayBuffer/ensureCapacity(int)
57	org/apache/http/util/CharArrayBuffer/setLength(int)
58	java/nio/CharBuffer/remaining()
59	org/apache/http/impl/nio/reactor/SessionInputBufferImpl/setOutputMode()
60	java/nio/CharBuffer/hasRemaining()
61	java/nio/ByteBuffer/get(int)
62	java/nio/charset/CharsetDecoder/onMalformedInput(java.nio.charset.CodingErrorAction)
63	java/nio/CharBuffer/flip()
64	java/nio/charset/CharsetEncoder/flush(java.nio.ByteBuffer)
65	java/nio/ByteBuffer/hasArray()
66	java/nio/channels/SocketChannel/register(java.nio.channels.Selector,int,java.lang.Object)
67	java/nio/CharBuffer/compact()
