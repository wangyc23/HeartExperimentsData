0	java/util/jar/Attributes$Name/toString()
1	com/google/common/collect/ImmutableSet$Builder/add(java.lang.Object)
2	java/lang/NullPointerException/NullPointerException()
3	com/google/common/collect/ImmutableSet$Builder/build()
4	java/util/Iterator/hasNext()
5	java/util/List/toArray()
6	java/lang/StringBuilder/toString()
7	org/spark_project/guava/collect/ImmutableMap$Builder/put(java.lang.Object,java.lang.Object)
8	java/lang/StringBuilder/append(java.lang.String)
9	java/lang/String/equals(java.lang.Object)
10	java/util/concurrent/Future/cancel(boolean)
11	java/util/Map$Entry/getKey()
12	java/util/Collection/iterator()
13	java/util/List/iterator()
14	java/net/URL/getFile()
15	java/net/URL/getProtocol()
16	com/google/common/collect/MultimapBuilder$MultimapBuilderWithKeys/linkedHashSetValues()
17	java/util/Iterator/next()
18	java/lang/System/nanoTime()
19	java/lang/StringBuilder/StringBuilder()
20	org/spark_project/guava/util/concurrent/AbstractListeningExecutorService/execute(java.lang.Runnable)
21	java/util/Collection/size()
22	com/google/common/collect/MultimapBuilder$SetMultimapBuilder/build()
23	java/util/ArrayList/ArrayList(int)
24	java/lang/Iterable/iterator()
25	java/util/Map/entrySet()
26	java/util/Set/iterator()
27	java/util/concurrent/Future/isDone()
28	java/lang/Object/equals(java.lang.Object)
29	java/util/Map$Entry/getValue()
30	java/util/logging/Logger/warning(java.lang.String)
31	org/spark_project/guava/collect/ImmutableMap$Builder/putAll(java.util.Map)
32	java/util/List/add(java.lang.Object)
33	org/spark_project/guava/collect/ImmutableMap$Builder/build()
34	java/util/jar/Manifest/getMainAttributes()
35	java/io/File/File(java.lang.String)
36	java/util/concurrent/Future/get()
37	com/google/common/collect/ImmutableSetMultimap$Builder/build()
38	java/util/concurrent/Future/get(long,java.util.concurrent.TimeUnit)
39	java/util/concurrent/TimeUnit/toNanos(long)
40	com/google/common/reflect/ClassPath$Scanner/getClassPathEntry(java.io.File,java.lang.String)
41	java/util/jar/Attributes/getValue(java.lang.String)
