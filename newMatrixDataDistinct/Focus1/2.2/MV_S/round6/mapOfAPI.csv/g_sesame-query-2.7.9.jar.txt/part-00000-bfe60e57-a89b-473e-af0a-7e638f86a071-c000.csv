0	java/util/Queue/clear()
1	java/lang/String/substring(int,int)
2	org/openrdf/query/algebra/Var/getName()
3	java/lang/IllegalArgumentException/getMessage()
4	org/openrdf/model/datatypes/XMLDatatypeUtil/isNumericDatatype(org.openrdf.model.URI)
5	java/util/Iterator/hasNext()
6	org/openrdf/query/Binding/getValue()
7	java/util/Set/clear()
8	org/openrdf/model/Literal/intValue()
9	org/openrdf/query/Binding/getName()
10	org/openrdf/model/Literal/getLabel()
11	org/openrdf/model/URI/equals(java.lang.Object)
12	org/openrdf/model/ValueFactory/createLiteral(float)
13	org/openrdf/model/ValueFactory/createLiteral(java.lang.String,java.lang.String)
14	java/lang/StringBuilder/toString()
15	org/openrdf/query/algebra/evaluation/iterator/PathIteration$ValuePair/ValuePair(org.openrdf.model.Value,org.openrdf.model.Value)
16	org/openrdf/query/BindingSet/hasBinding(java.lang.String)
17	java/lang/StringBuilder/append(java.lang.String)
18	org/openrdf/model/Literal/longValue()
19	org/openrdf/repository/sparql/query/InsertBindingSetCursor/InsertBindingSetCursor(info.aduna.iteration.CloseableIteration,org.openrdf.query.BindingSet)
20	org/openrdf/model/Literal/booleanValue()
21	java/lang/StringBuilder/append(long)
22	org/openrdf/query/QueryEvaluationException/QueryEvaluationException(java.lang.String)
23	info/aduna/iteration/SingletonIteration/SingletonIteration(java.lang.Object)
24	java/lang/StringBuilder/append(java.lang.Object)
25	java/util/Iterator/next()
26	org/openrdf/model/Literal/getDatatype()
27	org/openrdf/query/QueryEvaluationException/QueryEvaluationException(java.lang.Throwable)
28	org/openrdf/sail/config/SailConfigException/SailConfigException(java.lang.String,java.lang.Throwable)
29	java/lang/StringBuilder/StringBuilder()
30	org/openrdf/sail/config/SailConfigException/SailConfigException(java.lang.String)
31	org/openrdf/query/BindingSet/getValue(java.lang.String)
32	org/openrdf/model/util/GraphUtilException/getMessage()
33	org/openrdf/repository/sparql/SPARQLRepository/toString()
34	org/openrdf/repository/RepositoryConnection/prepareTupleQuery(org.openrdf.query.QueryLanguage,java.lang.String,java.lang.String)
35	org/openrdf/repository/RepositoryConnection/prepareBooleanQuery(org.openrdf.query.QueryLanguage,java.lang.String,java.lang.String)
36	org/openrdf/query/algebra/Service/getServiceVars()
37	org/openrdf/query/QueryEvaluationException/QueryEvaluationException(java.lang.String,java.lang.Throwable)
38	java/lang/Object/hashCode()
39	org/openrdf/model/Literal/floatValue()
40	java/lang/String/length()
41	org/openrdf/model/Literal/getLanguage()
42	org/openrdf/query/BooleanQuery/setBinding(java.lang.String,org.openrdf.model.Value)
43	java/lang/Object/equals(java.lang.Object)
44	org/openrdf/query/TupleQuery/setBinding(java.lang.String,org.openrdf.model.Value)
45	org/openrdf/model/util/GraphUtil/getOptionalObjectLiteral(org.openrdf.model.Graph,org.openrdf.model.Resource,org.openrdf.model.URI)
46	java/util/Set/contains(java.lang.Object)
47	org/openrdf/model/datatypes/XMLDatatypeUtil/isValidFloat(java.lang.String)
48	org/openrdf/model/datatypes/XMLDatatypeUtil/collapseWhiteSpace(java.lang.String)
49	org/openrdf/query/algebra/evaluation/iterator/PathIteration$ValuePair/getStartValue()
50	org/openrdf/query/algebra/evaluation/federation/FederatedService$QueryType/toString()
51	org/openrdf/query/BooleanQuery/evaluate()
52	org/openrdf/model/ValueFactory/createLiteral(java.lang.String,org.openrdf.model.URI)
53	org/openrdf/query/TupleQuery/evaluate()
54	java/lang/NumberFormatException/getMessage()
55	org/openrdf/sail/config/SailImplConfigBase/parse(org.openrdf.model.Graph,org.openrdf.model.Resource)
56	org/openrdf/query/BindingSet/iterator()
57	info/aduna/iteration/EmptyIteration/EmptyIteration()
58	org/openrdf/model/ValueFactory/createLiteral(java.lang.String)
59	java/lang/StringBuilder/append(int)
60	org/openrdf/model/util/GraphUtil/getUniqueSubject(org.openrdf.model.Graph,org.openrdf.model.URI,org.openrdf.model.Value,org.openrdf.model.Resource[])
61	info/aduna/iteration/CloseableIteration/next()
62	info/aduna/iteration/CloseableIteration/hasNext()
