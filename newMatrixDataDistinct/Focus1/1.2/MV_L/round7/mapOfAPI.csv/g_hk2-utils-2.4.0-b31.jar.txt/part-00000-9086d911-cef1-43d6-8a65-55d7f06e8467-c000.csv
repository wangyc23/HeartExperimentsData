0	org/glassfish/hk2/utilities/cache/LRUHybridCache$OriginThreadAwareFuture/OriginThreadAwareFuture(org.glassfish.hk2.utilities.cache.LRUHybridCache,org.glassfish.hk2.utilities.cache.LRUHybridCache,java.lang.Object)
1	java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock/unlock()
2	java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
3	org/glassfish/hk2/utilities/cache/LRUHybridCache$CycleHandler/handleCycle(java.lang.Object)
4	java/lang/Long/valueOf(long)
5	java/util/HashMap/put(java.lang.Object,java.lang.Object)
6	java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock/lock()
7	java/util/concurrent/ExecutionException/getCause()
8	org/glassfish/hk2/utilities/cache/Cache$OriginThreadAwareFuture/run()
9	java/util/concurrent/ConcurrentHashMap/putIfAbsent(java.lang.Object,java.lang.Object)
10	java/util/HashMap/containsKey(java.lang.Object)
11	org/glassfish/hk2/utilities/cache/LRUHybridCache$OriginThreadAwareFuture/access$202(org.glassfish.hk2.utilities.cache.LRUHybridCache$OriginThreadAwareFuture,long)
12	org/glassfish/hk2/utilities/cache/Cache$OriginThreadAwareFuture/OriginThreadAwareFuture(org.glassfish.hk2.utilities.cache.Cache,org.glassfish.hk2.utilities.cache.Cache,java.lang.Object)
13	org/glassfish/hk2/utilities/cache/LRUHybridCache$OriginThreadAwareFuture/run()
14	java/lang/Thread/getId()
15	java/lang/System/nanoTime()
16	java/util/concurrent/ConcurrentHashMap/size()
17	org/glassfish/hk2/utilities/cache/Cache$OriginThreadAwareFuture/get()
18	org/glassfish/hk2/utilities/cache/Cache$CycleHandler/handleCycle(java.lang.Object)
19	org/glassfish/hk2/utilities/cache/LRUHybridCache$OriginThreadAwareFuture/get()
20	java/util/concurrent/ConcurrentHashMap/get(java.lang.Object)
21	java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock/unlock()
22	org/glassfish/hk2/utilities/cache/Cache$OriginThreadAwareFuture/access$100(org.glassfish.hk2.utilities.cache.Cache$OriginThreadAwareFuture)
23	org/glassfish/hk2/utilities/cache/LRUHybridCache$OriginThreadAwareFuture/access$100(org.glassfish.hk2.utilities.cache.LRUHybridCache$OriginThreadAwareFuture)
24	java/util/concurrent/ConcurrentHashMap/remove(java.lang.Object)
25	java/lang/Thread/currentThread()
26	java/util/HashMap/get(java.lang.Object)
27	java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock/lock()
