0	java/util/LinkedList/isEmpty()
1	java/lang/Integer/intValue()
2	java/util/regex/Matcher/group(int)
3	java/io/InputStream/close()
4	java/util/Set/addAll(java.util.Collection)
5	java/util/List/listIterator(int)
6	java/lang/StringBuilder/append(java.lang.CharSequence)
7	java/util/Iterator/hasNext()
8	java/util/LinkedList/add(int,java.lang.Object)
9	java/net/URLConnection/getInputStream()
10	java/lang/StringBuilder/toString()
11	java/io/ByteArrayOutputStream/toByteArray()
12	java/lang/StringBuilder/append(java.lang.String)
13	java/util/regex/Matcher/matches()
14	java/lang/String/equalsIgnoreCase(java.lang.String)
15	java/lang/String/equals(java.lang.Object)
16	java/util/regex/Matcher/find()
17	java/util/Set/isEmpty()
18	java/net/URL/openConnection()
19	java/lang/Math/min(int,int)
20	java/util/HashSet/HashSet(java.util.Collection)
21	java/util/BitSet/clone()
22	java/io/PrintStream/println(java.lang.String)
23	java/util/Iterator/next()
24	java/util/BitSet/or(java.util.BitSet)
25	java/io/ByteArrayOutputStream/ByteArrayOutputStream()
26	java/lang/StringBuilder/StringBuilder()
27	java/util/LinkedList/iterator()
28	org/xml/sax/Attributes/getValue(java.lang.String)
29	java/io/IOException/IOException(java.lang.String)
30	java/util/ListIterator/hasPrevious()
31	java/lang/StringBuilder/StringBuilder(java.lang.CharSequence)
32	java/net/URLConnection/getContentEncoding()
33	java/util/zip/GZIPInputStream/GZIPInputStream(java.io.InputStream)
34	java/util/Set/iterator()
35	java/lang/String/length()
36	java/lang/Integer/parseInt(java.lang.String)
37	java/lang/String/startsWith(java.lang.String)
38	java/util/regex/Pattern/matcher(java.lang.CharSequence)
39	java/lang/Math/max(int,int)
40	java/io/InputStream/read(byte[])
41	java/lang/StringBuilder/append(char)
42	java/nio/charset/Charset/forName(java.lang.String)
43	java/io/ByteArrayOutputStream/write(byte[],int,int)
44	java/util/List/size()
45	java/lang/Integer/valueOf(int)
46	java/lang/String/charAt(int)
47	java/net/URLConnection/getContentType()
48	java/util/ListIterator/previous()
