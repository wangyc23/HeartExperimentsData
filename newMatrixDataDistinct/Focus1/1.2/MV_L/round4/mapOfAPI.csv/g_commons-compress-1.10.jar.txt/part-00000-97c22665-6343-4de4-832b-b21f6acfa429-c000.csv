0	java/nio/ByteBuffer/limit()
1	java/nio/ByteBuffer/arrayOffset()
2	org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry/access$200(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry)
3	java/lang/StringBuilder/toString()
4	java/nio/ByteBuffer/array()
5	java/lang/StringBuilder/append(java.lang.String)
6	java/lang/RuntimeException/RuntimeException(java.lang.String)
7	java/lang/StringBuilder/append(long)
8	org/apache/commons/compress/archivers/zip/ZipArchiveEntry/setCompressedSize(long)
9	java/nio/ByteBuffer/position()
10	java/util/zip/ZipException/ZipException(java.lang.String)
11	org/apache/commons/compress/archivers/zip/ZipArchiveEntry/getComment()
12	java/lang/StringBuilder/StringBuilder()
13	org/apache/commons/compress/archivers/tar/TarArchiveOutputStream/write(int)
14	java/nio/channels/SeekableByteChannel/position()
15	org/apache/commons/compress/archivers/zip/ZipArchiveEntry/getCrc()
16	java/lang/Long/toHexString(long)
17	org/apache/commons/compress/archivers/zip/ZipArchiveEntry/getTime()
18	java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
19	org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry/access$400(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry)
20	java/util/Map/put(java.lang.Object,java.lang.Object)
21	org/apache/commons/compress/archivers/zip/ZipArchiveEntry/getCompressedSize()
22	java/lang/Math/min(long,long)
23	org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry/access$500(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry)
24	org/apache/commons/compress/archivers/zip/ZipArchiveEntry/setCrc(long)
25	org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry/access$100(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry)
26	java/lang/StringBuilder/append(int)
27	java/nio/channels/SeekableByteChannel/position(long)
