0	org/apache/log4j/Level/isGreaterOrEqual(org.apache.log4j.Priority)
1	java/lang/String/substring(int,int)
2	org/apache/log4j/Logger/callAppenders(org.apache.log4j.spi.LoggingEvent)
3	java/lang/StringBuffer/StringBuffer()
4	java/io/File/exists()
5	java/util/Hashtable/get(java.lang.Object)
6	java/util/Hashtable/put(java.lang.Object,java.lang.Object)
7	java/io/DataInputStream/DataInputStream(java.io.InputStream)
8	java/io/ObjectInputStream/readObject()
9	java/lang/Thread/start()
10	java/lang/StringBuffer/toString()
11	java/net/Socket/getOutputStream()
12	java/net/InetAddress/toString()
13	java/net/ServerSocket/accept()
14	java/lang/Thread/interrupt()
15	java/lang/String/equals(java.lang.Object)
16	java/lang/Thread/Thread(java.lang.Runnable)
17	java/lang/StringBuffer/append(java.lang.String)
18	java/net/Socket/close()
19	java/io/File/getAbsolutePath()
20	org/apache/log4j/Logger/getEffectiveLevel()
21	org/apache/log4j/Logger/info(java.lang.Object)
22	java/net/Socket/Socket(java.lang.String,int)
23	java/lang/StringBuffer/append(int)
24	java/lang/StringBuffer/append(java.lang.Object)
25	org/apache/log4j/chainsaw/LoggingReceiver$Slurper/Slurper(org.apache.log4j.chainsaw.LoggingReceiver,java.net.Socket)
26	java/net/Socket/getInputStream()
27	java/io/DataInputStream/readUTF()
28	java/lang/String/indexOf(java.lang.String)
29	java/lang/Exception/printStackTrace()
30	java/lang/Thread/setDaemon(boolean)
31	java/net/InetAddress/getHostName()
32	java/lang/System/exit(int)
33	java/io/DataOutputStream/writeUTF(java.lang.String)
34	java/net/Socket/getInetAddress()
35	org/apache/log4j/Logger/warn(java.lang.Object)
36	org/apache/log4j/Logger/info(java.lang.Object,java.lang.Throwable)
37	org/apache/log4j/Logger/debug(java.lang.Object)
38	java/io/File/File(java.io.File,java.lang.String)
39	java/io/ObjectInputStream/close()
40	org/apache/log4j/Logger/error(java.lang.Object,java.lang.Throwable)
41	java/net/ServerSocket/ServerSocket(int)
42	java/lang/Thread/currentThread()
43	java/io/DataOutputStream/DataOutputStream(java.io.OutputStream)
