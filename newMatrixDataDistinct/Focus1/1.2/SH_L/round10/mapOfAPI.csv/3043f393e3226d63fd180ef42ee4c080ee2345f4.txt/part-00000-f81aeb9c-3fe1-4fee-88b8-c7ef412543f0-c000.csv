0	parquet/schema/Type/isRepetition(parquet.schema.Type.Repetition)
1	parquet/io/ColumnIO/getParent()
2	parquet/io/ColumnIO/getType()
3	parquet/thrift/ParquetWriteProtocol/FieldBaseWriteProtocol/end()
4	parquet/io/api/RecordConsumer/startField(java.lang.String,int)
5	parquet/io/ColumnIO/getFieldPath()
6	parquet/io/ColumnIO/getRepetitionLevel()
7	parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/log(java.lang.Object)
8	parquet/io/ColumnIO/getParent(int)
9	parquet/thrift/ThriftRecordConverter/hasMissingRequiredFieldInGroupType(parquet.schema.GroupType,parquet.schema.GroupType)
10	parquet/io/InvalidRecordException/InvalidRecordException(java.lang.String)
11	parquet/io/ParquetEncodingException/ParquetEncodingException(java.lang.String)
12	parquet/io/ColumnIO/getDefinitionLevel()
13	java/util/Arrays/toString(java.lang.Object[])
14	parquet/io/api/RecordConsumer/endGroup()
15	parquet/schema/Type/asGroupType()
16	parquet/schema/Type/getName()
17	parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/printState()
18	parquet/schema/Type/isPrimitive()
19	parquet/io/MessageColumnIO/MessageColumnIORecordConsumer/FieldsMarker/markWritten(int)
20	parquet/io/api/RecordConsumer/endField(java.lang.String,int)
21	parquet/thrift/ParquetWriteProtocol/FieldBaseWriteProtocol/start()
22	parquet/schema/GroupType/containsField(java.lang.String)
23	parquet/schema/Type/getRepetition()
24	parquet/io/api/RecordConsumer/startGroup()
25	parquet/schema/GroupType/getType(java.lang.String)
26	parquet/schema/GroupType/getFields()
