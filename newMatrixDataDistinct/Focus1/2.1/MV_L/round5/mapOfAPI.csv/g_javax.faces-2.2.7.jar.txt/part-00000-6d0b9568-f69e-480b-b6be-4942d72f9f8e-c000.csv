0	java/lang/Class/getConstructor(java.lang.Class[])
1	java/lang/NullPointerException/NullPointerException()
2	java/util/Iterator/hasNext()
3	javax/faces/FactoryFinder$FactoryManagerCache/detectSpecialInitializationCase(javax.faces.context.FacesContext)
4	java/lang/reflect/Modifier/isPublic(int)
5	java/util/concurrent/ConcurrentMap/putIfAbsent(java.lang.Object,java.lang.Object)
6	javax/faces/FactoryFinder$FactoryManager/FactoryManager()
7	java/util/concurrent/ConcurrentMap/get(java.lang.Object)
8	javax/faces/component/UIComponent/isTransient()
9	java/lang/Object/getClass()
10	java/util/Map/containsKey(java.lang.Object)
11	java/util/Map$Entry/getKey()
12	java/util/Collection/iterator()
13	java/util/List/iterator()
14	java/util/Iterator/next()
15	javax/faces/component/UIComponentBase$AttributesMap/entrySet()
16	java/util/Map/size()
17	java/lang/IllegalStateException/IllegalStateException(java.lang.String)
18	java/util/Collection/size()
19	javax/faces/FactoryFinder$FactoryManagerCacheKey/FactoryManagerCacheKey(javax.faces.context.FacesContext,java.lang.ClassLoader,java.util.Map)
20	javax/faces/component/UIComponentBase/popComponentFromEL(javax.faces.context.FacesContext)
21	javax/faces/FactoryFinder$FactoryManagerCacheKey/getClassLoader()
22	java/util/ArrayList/ArrayList(int)
23	java/util/concurrent/ConcurrentMap/entrySet()
24	java/util/Map/entrySet()
25	java/util/Set/iterator()
26	java/util/List/remove(int)
27	java/util/Map/get(java.lang.Object)
28	javax/faces/component/UIComponentBase/pushComponentToEL(javax.faces.context.FacesContext,javax.faces.component.UIComponent)
29	java/lang/Object/equals(java.lang.Object)
30	java/util/Map$Entry/getValue()
31	java/util/List/indexOf(java.lang.Object)
32	java/util/Iterator/remove()
33	javax/faces/component/UIComponentBase$AttributesMap/size()
34	java/util/List/add(java.lang.Object)
35	java/lang/Class/getModifiers()
36	javax/faces/FactoryFinder$FactoryManager/FactoryManager(javax.faces.FactoryFinder$FactoryManager)
37	javax/faces/FactoryFinder$FactoryManagerCacheKey/getContext()
